// src/share/constants.js 

// shell type
var TYPE_FRAG = 0;
var TYPE_ELEM = 1;
var TYPE_TEXT = 3;

// event flags
var FLAG_NONE = 0;
var FLAG_ONCE = 4;
var FLAG_PASSIVE = 2
var FLAG_CAPTURE = 1;

// change flags
var FLAG_CHANGED_CACHE = 1;
var FLAG_CHANGED_CHILDREN = 2;
var FLAG_CHANGED_CONTENTS = 4;
var FLAG_CHANGED_COMMANDS = 8;
var FLAG_WAITING_UPDATING = 16;
var FLAG_WAITING_DIGESTING = 32;
var FLAG_SHOULD_RENDER_TO_VIEW = (FLAG_CHANGED_CACHE | FLAG_CHANGED_CHILDREN | FLAG_CHANGED_COMMANDS);
var FLAG_STARTED = 128;
var FLAG_MOUNTED = 256;
var FLAG_DESTROYED = 512;

// symbols
var EXTAG_VNODE = Object.freeze({});

var VIEW_ENGINE = 'view-engine';

// empty things
var EMPTY_FUNCTION = function() {};
var EMPTY_OBJECT = {};
var EMPTY_ARRAY = [];

// template symbols
var EVENT_SYMBOL = 'event';
var CONTEXT_SYMBOL = 'this';
var BINDING_FORMAT = '@{0}';
var BINDING_BRACKETS = '{}';
var BINDING_OPERATORS = {
  DATA: '@', 
  TEXT: '#', 
  EVENT: '+', 
  FRAGMENT: '<>',
  MODIFIER: '::',
  CONVERTER: '|=', 
  // SCOPE_EVENT: '@', 
  ASSIGN: '!',
  TWO_WAY: '@',  
  ANY_WAY: '^', 
  ONE_TIME: '?'
};

// regex
var WHITE_SPACES_REGEXP = /\s+/;
var WHITE_SPACE_REGEXP = /\s/g;
var CAPITAL_REGEXP = /^[A-Z]/;
var CONTEXT_REGEXP = /^this\./;
var HANDLER_REGEXP = /^(this\.)?[\w$_]+$/;
var PROP_EXPR_REGEXP = /^\s*[$_a-zA-Z0-9]+\s*$/;


export {
  TYPE_FRAG,
  TYPE_ELEM,
  TYPE_TEXT,

  FLAG_NONE,
  FLAG_ONCE,
  FLAG_CAPTURE,
  FLAG_PASSIVE,
  
  FLAG_CHANGED_CACHE,
  FLAG_CHANGED_CHILDREN,
  FLAG_CHANGED_CONTENTS,
  FLAG_CHANGED_COMMANDS,
  FLAG_WAITING_UPDATING,
  FLAG_WAITING_DIGESTING,
  FLAG_SHOULD_RENDER_TO_VIEW,
  FLAG_STARTED,
  FLAG_MOUNTED,
  FLAG_DESTROYED,

  EXTAG_VNODE,
  
  VIEW_ENGINE,

  EMPTY_ARRAY,
  EMPTY_OBJECT,
  EMPTY_FUNCTION,

  EVENT_SYMBOL,
  CONTEXT_SYMBOL,
  BINDING_FORMAT,
  BINDING_BRACKETS,
  BINDING_OPERATORS,

  WHITE_SPACES_REGEXP,
  WHITE_SPACE_REGEXP,
  PROP_EXPR_REGEXP,
  CAPITAL_REGEXP,
  CONTEXT_REGEXP,
  HANDLER_REGEXP
};